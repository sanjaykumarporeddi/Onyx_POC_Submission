{
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information", // Default logging level for production
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.AspNetCore": "Warning",
        "Microsoft.Hosting.Lifetime": "Information",
        "Microsoft.EntityFrameworkCore": "Warning",
        "Microsoft.EntityFrameworkCore.Database.Command": "Warning"
      }
    },
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId", "WithProcessId" ],
    "WriteTo": [
      {
        "Name": "Console", // In production,  use JSON logging
        "Args": {
          "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
        }
      }
      
    ],
    "Properties": {
      "ApplicationName": "Onyx.ProductAPI",
      "Environment": "Production"  
    }
  },
  "ConnectionStrings": {
    // FOR PRODUCTION: This value MUST be overridden by environment variables
    // or a secure configuration provider (e.g., Azure Key Vault).
  
    "DefaultConnection": "PRODUCTION_CONNECTION_STRING_MUST_BE_SET_VIA_ENV_OR_KEY_VAULT",
    "AzureServiceBusConnectionString": "Endpoint=sb://test.servicebus.windows.net/;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=Test"
  },
  "ServiceBusTopics": {
    "ProductChangesTopic": "queue-shoppingcart"
  },

  "ApiSettings": {
    // FOR PRODUCTION: This Secret MUST be overridden by environment variables
    // or a secure configuration provider (e.g., Azure Key Vault). 
    "Secret": "PLACEHOLDER_PRODUCTION_SECRET_MUST_BE_VERY_STRONG_AND_MANAGED_SECURELY_VIA_ENV_OR_KEY_VAULT",
    "Issuer": "onyx-product-api-issuer-prod", // Standard issuer for production
    "Audience": "onyx-product-api-clients-prod" // Standard audience for production
  },
  "CorsSettings": {
    // In production, list your specific frontend domain(s) here.
    // This MUST be configured for production via environment variables or other config providers.
    // Example: "AllowedOrigins": [ "https://app.onyxcapital.com" ]
    "AllowedOrigins": [] // Default to empty; will cause CORS to block if not overridden in prod.
  },
  "AllowedHosts": "*" // Standard default, can be restricted further in production if needed.
}